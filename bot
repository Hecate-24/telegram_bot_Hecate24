import re #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
import telebot #–∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ @BotFather
from telebot import types #–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ —Ç–≥-–±–æ—Ç–µ

#–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = 'XXX' #–≤–ø–∏—à–∏—Ç–µ —Å–≤–æ–π
ADMIN_IDS = [XXX] #–≤–ø–∏—à–∏—Ç–µ —Å–≤–æ–π

bot = telebot.TeleBot(TOKEN)

user_city = {} #–≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
user_stage = {} #—Å—Ç–∞–¥–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
pending_messages = {} #—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

#–∫–æ–º–∞–Ω–¥—ã - —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥
@bot.message_handler(commands=['start'])
def start_command(message):
    markup = types.InlineKeyboardMarkup(row_width=1) #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, row_width=1 - –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ
    markup.add(
        types.InlineKeyboardButton("–û—Ñ–∏—Å–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏", callback_data="office_supplies"),
        types.InlineKeyboardButton("–°–º–∞—Ä—Ç–≤–µ–π", callback_data="smartway")
    )
    bot.send_message(
        message.chat.id,
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∏–Ω–Ω–∏, —è ‚Äî –±–æ—Ç, –ø—Ä–∏–∑–≤–∞–Ω–Ω—ã–π –ø–æ–º–æ—á—å —Å –æ—Ñ–∏—Å-–∑–∞–∫—É–ø–∫–∞–º–∏ –∏ —Ä–∞–±–æ—á–∏–º–∏ –ø–æ–µ–∑–¥–∫–∞–º–∏.\n\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:',
        reply_markup=markup #–ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∫–Ω–æ–ø–∫–∏
    )

#–æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞, –æ—Ç–ø—Ä–∞–≤–∫–∞ —à–∞–±–ª–æ–Ω–∞
@bot.message_handler(commands=['smartway'])
def biznes_travel(message): #message ‚Äî –æ–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ß–µ—Ä–µ–∑ –Ω–µ–≥–æ –º—ã –ø–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞, —Ç–µ–∫—Å—Ç, –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    chat_id = message.chat.id
    user_stage[chat_id] = "waiting_smartway" #–ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ –±–æ—Ç –∂–¥–µ—Ç —Å–º–∞—Ä—Ç–≤–µ–π-—Å–æ–æ–±—â–µ–Ω–∏–µ
    send_smartway_template(chat_id)
   
#–æ—Ç–ø—Ä–∞–≤–∫–∞ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ñ–∏—Å–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏
@bot.message_handler(commands=['order'])
def order_template(message):
    send_order_template(message.chat.id)

#—Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã
@bot.message_handler(commands=['site'])
def show_links(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("üì¶ –ö–æ–º—É—Å", url="https://www.komus.ru"),
        types.InlineKeyboardButton("üõí –í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã–†—É", url="https://www.vseinstrumenti.ru"),
        types.InlineKeyboardButton("üîß –ß–∏–ø –∏ –î–∏–ø", url="https://www.chipdip.ru"),
        types.InlineKeyboardButton("üíª –°–∏—Ç–∏–ª–∏–Ω–∫", url="https://www.citilink.ru")
    )
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω:", reply_markup=markup)

#—Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
@bot.message_handler(commands=['city'])
def choose_city(message):
    send_city_buttons(message.chat.id)

#–≤—ã–≤–æ–¥ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['help'])
def request_help(message):
    help_text = (
        '–ù–∞–ø–∏—à–∏ "–ü—Ä–∏–≤–µ—Ç" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –∑–∞–ø—Ä–æ—Å –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —è —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º!\n\n'
        '<b>–¢—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π, –ø–æ—Å—ã–ª–∞—è —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n'
        '‚Ä¢ /start - –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É.\n'
        '‚Ä¢ /order - —à–∞–±–ª–æ–Ω –∑–∞–∫–∞–∑–∞.\n'
        '‚Ä¢ /city - –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥.\n'
        '‚Ä¢ /site - –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã: "–∫–æ–º—É—Å", "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "—Ç–µ—Ö–Ω–∏–∫–∞", "–∑–∞–ø—á–∞—Å—Ç–∏".\n'
        '‚Ä¢ /smartway - —à–∞–±–ª–æ–Ω –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –∏–ª–∏ –æ–±–º–µ–Ω –±–∏–ª–µ—Ç–∞.\n'
    )
    bot.send_message(message.chat.id, help_text, parse_mode="html")

#—à–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–∫—É–ø–∫—É
def send_order_template(chat_id):
    bot.send_message(
        chat_id,
        f'<b>–®–∞–±–ª–æ–Ω –¥–ª—è –∑–∞—è–≤–∫–∏:</b>\n'
        f'"–ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ—à—É –∑–∞–∫–∞–∑–∞—Ç—å <u><i>–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ</i></u> –¥–ª—è <u><i>—É–∫–∞–∑–∞–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã</i></u>.\n'
        f'–°—Å—ã–ª–∫–∞: <u><i>–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏</i></u>\n\n'
        f'üë∫<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∑–∞—è–≤–∫—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!</b>üë∫',
        parse_mode="html"
    )

#—à–∞–±–ª–æ–Ω —Å–º–∞—Ä—Ç–≤–µ—è
def send_smartway_template(chat_id):
    bot.send_message(
        chat_id,
        '<b>–û–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ —à–∞–±–ª–æ–Ω—É –Ω–∏–∂–µ:</b>\n'
        '‚Ä¢ –§–ò–û;\n'
        '‚Ä¢ –ü—Ä–∏—á–∏–Ω–∞ –æ–±–º–µ–Ω–∞ –∏–ª–∏ —Å–¥–∞—á–∏ –±–∏–ª–µ—Ç–∞;\n'
        '‚Ä¢ –í—Ä–µ–º—è, –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è;\n'
        '‚Ä¢ –ò–º–µ–µ—Ç—Å—è –±–∞–≥–∞–∂? - "–î–∞/–Ω–µ—Ç";\n'
        '‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–º–µ–Ω—è—Ç—å –∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≥–æ—Å—Ç–∏–Ω–∏—Ü—É/–æ—Ç–µ–ª—å? - "–î–∞/–ù–µ—Ç";\n'
        '‚Ä¢ –ü–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –≤ –∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å —Ç–≤–æ–π –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å? - "–î–∞/–ù–µ—Ç".\n\n'
        'üë∫<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∑–∞—è–≤–∫—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!</b>üë∫',
        parse_mode="html"
    )

#–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å –≥–æ—Ä–æ–¥–∞–º–∏
def send_city_buttons(chat_id):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("–ú–æ—Å–∫–≤–∞", callback_data="city_msk"),
        types.InlineKeyboardButton("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data="city_spb"),
        types.InlineKeyboardButton("–°–∞–º–∞—Ä–∞", callback_data="city_samara"),
        types.InlineKeyboardButton("–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", callback_data="city_nsk")
    )
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def handle_callbacks(call):
    bot.answer_callback_query(call.id)
    chat_id = call.message.chat.id
    
    #–∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–æ—Ä–æ–¥–∞
    if call.data == "office_supplies":
        user_stage[chat_id] = "waiting_message"
        send_city_buttons(chat_id)
        
    #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∞–º, –µ—Å–ª–∏ –Ω–µ—Ç - —à–∞–±–ª–æ–Ω –∏ –∂–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    elif call.data == "smartway":
        original_message = pending_messages.pop(chat_id, None)
        if original_message:
            for admin_id in ADMIN_IDS:
                bot.send_message(
                    admin_id,
                    f"<b>‚úàÔ∏è Smartway-–∑–∞—è–≤–∫–∞</b> –æ—Ç @{call.from_user.username or call.from_user.first_name}:\n{original_message}",
                    parse_mode="html"
                )
            bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞—è–≤–∫—É –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.")
        else:
            send_smartway_template(chat_id)
            user_stage[chat_id] = "waiting_smartway"

    #—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∞–º, –µ—Å–ª–∏ –Ω–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω
    elif call.data.startswith("city_"):
        city_map = {
            "city_msk": "–ú–æ—Å–∫–≤–∞",
            "city_spb": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
            "city_samara": "–°–∞–º–∞—Ä–∞",
            "city_nsk": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"
        }
        city = city_map.get(call.data)
        user_city[chat_id] = city

        if chat_id in pending_messages:
            original_message = pending_messages.pop(chat_id)
            for admin_id in ADMIN_IDS:
                bot.send_message(
                    admin_id,
                    f"<b>üíµ –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–∫—É–ø–∫—É</b> –æ—Ç @{call.from_user.username or call.from_user.first_name}:\n–ì–æ—Ä–æ–¥: {city}\n–°–æ–æ–±—â–µ–Ω–∏–µ: {original_message}", parse_mode="html"
                )
            bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ.")
        else:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥", callback_data="change_city"))
            bot.send_message(chat_id, f"–°–ø–∞—Å–∏–±–æ! –¢—ã –≤—ã–±—Ä–∞–ª: {city}. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –∑–∞—è–≤–∫—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî —à–∞–±–ª–æ–Ω –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /order.", reply_markup=markup)
            user_stage[chat_id] = "waiting_office_order"

    #–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∑–∞–Ω–æ–≤–æ
    elif call.data == "change_city":
        send_city_buttons(chat_id)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda m: True)
def handle_text_messages(message):
    chat_id = message.chat.id
    text = message.text.strip().lower()

    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–º–∞—Ä—Ç-–∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∞–º
    if user_stage.get(chat_id) == "waiting_smartway":
        for admin_id in ADMIN_IDS:
            bot.send_message(
                admin_id,
                f"<b>‚úàÔ∏è Smartway-–∑–∞—è–≤–∫–∞</b> –æ—Ç @{message.from_user.username or message.from_user.first_name}:\n{message.text}",
                parse_mode="html"
            )
        bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞—è–≤–∫—É –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.")
        user_stage.pop(chat_id, None)
        return
    
    #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –ø—Ä–∏–≤–µ—Ç - —Å—Ç–∞—Ä—Ç
    if re.fullmatch(r"–ø—Ä–∏–≤–µ—Ç[!.,‚Ä¶]*", text):
        user_stage[chat_id] = "waiting_message"
        start_command(message)
        return
    
    #–≤—ã–∑–æ–≤ —Å—Å—ã–ª–æ–∫ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    quick_links = {
        "–∫–æ–º—É—Å": "https://www.komus.ru",
        "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã": "https://www.vseinstrumenti.ru",
        "–∑–∞–ø—á–∞—Å—Ç–∏": "https://www.chipdip.ru",
        "—Ç–µ—Ö–Ω–∏–∫–∞": "https://www.citilink.ru"
    }
    if text in quick_links:
        bot.send_message(chat_id, quick_links[text], disable_web_page_preview=True)
        return

    if re.fullmatch(r"—Å–ø–∞+—Å–∏+–±–æ+|—Å–ø—Å|—Å–ø–∞—Å–∏–±+|–æ+—Ç+–ª+–∏+—á+–Ω+–æ+|—Å—É+–ø+–µ+—Ä+|–∫+–ª+–∞+—Å+—Å+|—Ö+–æ+—Ä+–æ+—à+–æ", text):
        bot.send_message(chat_id, f"–†–∞–¥ –ø–æ–º–æ—á—å, {message.from_user.first_name}!")
        return

    #–µ—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –≤—ã–±—Ä–∞–Ω - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ - –∫–Ω–æ–ø–∫–∏ - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    city = user_city.get(chat_id)
    if not city:
        pending_messages[chat_id] = message.text
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(
            types.InlineKeyboardButton("–û—Ñ–∏—Å–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏", callback_data="office_supplies"),
            types.InlineKeyboardButton("–°–º–∞—Ä—Ç–≤–µ–π", callback_data="smartway")
        )
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:", reply_markup=markup)
        user_stage[chat_id] = "waiting_section"
        return
    
    #–æ—Ñ–∏—Å–Ω–∞—è –∑–∞—è–≤–∫–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∞–º, –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if user_stage.get(chat_id) == "waiting_office_order":
        for admin_id in ADMIN_IDS:
            bot.send_message(
                admin_id,
                f"<b>üíµ –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–∫—É–ø–∫—É</b> @{message.from_user.username or message.from_user.first_name}:\n–ì–æ—Ä–æ–¥: {city}\n–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}", parse_mode="html"
            )
        bot.send_message(chat_id, "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. –ú—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ç—Ä—ë—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. –ñ–¥—É —Ç–µ–±—è –µ—â—ë!")

    #—Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_stage.pop(chat_id, None)
    user_city.pop(chat_id, None)

#–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)
